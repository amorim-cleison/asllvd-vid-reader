; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	y:\asl\software\video_compressor\vid_reader\zlib\zlib-1.2.3\contrib\masmx86\gvmat32c.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_iIsPPro DD	02H
_DATA	ENDS
PUBLIC	_match_init
EXTRN	_cpudetect32:PROC
; Function compile flags: /Odtp /ZI
; File y:\asl\software\video_compressor\vid_reader\zlib\zlib-1.2.3\contrib\masmx86\gvmat32c.c
;	COMDAT _match_init
_TEXT	SEGMENT
_match_init PROC					; COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 44   :     iIsPPro = (((cpudetect32()/0x100)&0xf)>=6) ? 1 : 0;

	call	_cpudetect32
	shr	eax, 8
	and	eax, 15					; 0000000fH
	cmp	eax, 6
	sbb	eax, eax
	add	eax, 1
	mov	DWORD PTR _iIsPPro, eax

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_match_init ENDP
_TEXT	ENDS
PUBLIC	_longest_match
EXTRN	_longest_match_7fff:PROC
EXTRN	_longest_match_686:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT _longest_match
_TEXT	SEGMENT
_s$ = 8							; size = 4
_cur_match$ = 12					; size = 4
_longest_match PROC					; COMDAT

; 50   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 51   :     if (iIsPPro!=0)

	cmp	DWORD PTR _iIsPPro, 0
	je	SHORT $LN2@longest_ma

; 52   :         return longest_match_686(s,cur_match);

	mov	eax, DWORD PTR _cur_match$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_longest_match_686
	add	esp, 8
	jmp	SHORT $LN3@longest_ma
$LN2@longest_ma:

; 53   : 
; 54   :     if (s->w_mask != 0x7fff)

	mov	eax, DWORD PTR _s$[ebp]
	cmp	DWORD PTR [eax+52], 32767		; 00007fffH
	je	SHORT $LN1@longest_ma

; 55   :         return longest_match_686(s,cur_match);

	mov	eax, DWORD PTR _cur_match$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_longest_match_686
	add	esp, 8
	jmp	SHORT $LN3@longest_ma
$LN1@longest_ma:

; 56   : 
; 57   :     /* now ((s->w_mask == 0x7fff) && (iIsPPro==0)) */
; 58   :         return longest_match_7fff(s,cur_match);

	mov	eax, DWORD PTR _cur_match$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_longest_match_7fff
	add	esp, 8
$LN3@longest_ma:

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_longest_match ENDP
_TEXT	ENDS
END
